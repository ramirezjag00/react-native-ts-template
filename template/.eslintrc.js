module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  extends: [
    '@react-native',
    'plugin:import/typescript',
    'plugin:import/recommended',
  ],
  parserOptions: {
    project: './tsconfig.json',
    ecmaFeatures: {
      jsx: true,
    },
  },
  env: {
    node: true,
  },
  settings: {
    react: { version: 'detect' },
    'import/resolver': 'eslint-import-resolver-typescript',
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      rules: {
        '@typescript-eslint/no-shadow': 'error',
        'no-shadow': 'off',
        'no-undef': 'off',
      },
    },
    {
      // Disable TS parsing for Jest config files
      files: [
        'jest.config.js',
        'babel.config.js',
        'metro.config.js',
        '.eslintrc.js',
      ],
      parserOptions: {
        project: null,
      },
    },
  ],
  plugins: ['import', 'eslint-plugin-react-compiler'],
  rules: {
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/no-shadow': 'error',
    'array-bracket-spacing': 'error',
    'arrow-spacing': 'error',
    'eol-last': 'error',
    'newline-before-return': 'error',
    'no-shadow': 'off',
    'no-param-reassign': 'error',
    'no-trailing-spaces': 'error',
    'no-unused-vars': 'error',
    camelcase: 'warn',
    'default-param-last': 'warn',
    'object-curly-spacing': ['error', 'always'],
    'spaced-comment': ['error', 'always'],
    'react-hooks/exhaustive-deps': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react-native/no-color-literals': 'error',
    'react-native/no-single-element-style-arrays': 'error',
    'react-native/no-unused-styles': 'error',
    'react-native/sort-styles': [
      'error',
      'asc',
      { ignoreClassNames: true, ignoreStyleProperties: false },
    ],
    'react/no-array-index-key': 'error',
    'react/display-name': 'error',
    'react/jsx-curly-spacing': 'error',
    'react/jsx-equals-spacing': 'error',
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/prop-types': 'off',
    'react/destructuring-assignment': ['warn', 'always'],
    'react/no-multi-comp': ['error', { ignoreStateless: false }],
    'react/no-unstable-nested-components': ['warn', { allowAsProps: false }],
    'react/jsx-handler-names': [
      'error',
      {
        eventHandlerPrefix: '(handle|on|get|set|fetch)',
        eventHandlerPropPrefix: '(handle|on|get|set|fetch)',
        checkLocalVariables: true,
        checkInlineFunction: true,
      },
    ],
    'react/jsx-no-constructed-context-values': 'error',
    'react/jsx-props-no-multi-spaces': 'warn',
    'react/jsx-sort-props': [
      'warn',
      {
        ignoreCase: false,
        noSortAlphabetically: false,
        reservedFirst: true,
        callbacksLast: false,
        shorthandFirst: false,
        shorthandLast: true,
      },
    ],
    'import/exports-last': 'error',
    'import/order': [
      'error',
      {
        groups: [
          'builtin',
          'external',
          ['internal', 'parent', 'sibling', 'index'],
          'unknown',
        ],
        pathGroups: [
          {
            pattern: 'react+(|-native)',
            group: 'external',
            position: 'before',
          },
          {
            pattern: '**/*.+(png|jpg|jpeg|ico|json|gif)',
            group: 'index',
            patternOptions: { matchBase: true },
            position: 'after',
          },
        ],
        pathGroupsExcludedImportTypes: ['react'],
        'newlines-between': 'always',
        alphabetize: { order: 'asc', caseInsensitive: true },
      },
    ],
    'import/newline-after-import': ['error', { count: 1 }],
    'import/no-named-default': 'error',
    'import/prefer-default-export': 'off',
    'import/no-anonymous-default-export': 'error',
    'import/group-exports': 'error',
    'react-compiler/react-compiler': 'error',
  },
};
